<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="usage_nested_items">
    <title>Nesting</title>
    
    <shortdesc>The <apiname>Container</apiname> allows for nesting.</shortdesc>
    
    <prolog>
        <author>Joel Bodenmann</author>
        <metadata>
            <keywords>
                <indexterm>usage
                    <indexterm>nesting</indexterm>
                </indexterm>
            </keywords>
        </metadata>
    </prolog> 
    
    <conbody>
        <p>The <apiname>Container</apiname> class allows for nesting to produce serialized output
            that represents hierarchical/polymorphic data.</p>
        <example>
            <title>Created nested values</title>
            <p>Nesting is achieved by passing a <apiname>Container</apiname> to <apiname>Container::addValue()</apiname>.</p>
            <codeblock outputclass="language-cpp"><![CDATA[Color color;
Gpds::Container c;
c.addValue( "color", color.toContainer() );]]></codeblock>
        </example>
        <example>
            <title>Retrieve nested values</title>
            <p>Nested containers can be retrieved by calling
                    <codeph>Container::getValue&lt;Gpds::Container*>()</codeph>.</p>
            <codeblock outputclass="language-cpp"><![CDATA[Color color;
color.fromContainer( *carContainer.getValue<Gpds::Container*>( "color" );]]></codeblock>
        </example>
    </conbody>
</concept>
